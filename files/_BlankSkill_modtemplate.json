{
    "name": {
				"type":"text",
				"tooltip":"name of skill",
				"options":["addition"]
			},
    "descrip": {
				"type":"area",
				"tooltip":"skill description.\nPlayWhilePlayerSleeping can be provided as a value for Monster skills \nto trigger the skills statusOutcome while the player is asleep"
			},
    "costType": {
				"type":"singlelist",
				"tooltip":"how much it will take of a resource to use",
				"choices":["ep","sp","hp"]
			},
    "cost": {
				"type":"int",
				"tooltip":"how much it will take of a resource to use"
			},
    "requiredLevel": {
				"type":"int",
				"tooltip":"level required to learn the skill"
			},
    "learningCost": {
				"type":"int",
				"tooltip":"Eros cost of skill. \nThe key does not apply to monsters"
			},
    "skillType": {
				"type":"singlelist",
				"tooltip":"what kind of skill is it",
				"choices":["attack","Healing", "HealingEP", "HealingSP", "statusEffect", "Afflict"]
			},
    "statType": {
				"type":"singlelist",
				"tooltip":"what stat does it scale off of",
				"choices":["Power","Technique","Willpower","Allure","Intelligence","Luck"]
			},
    "requiredStat": {
				"type":"int",
				"tooltip":"The required amount of the given 'statType': \nin order to learn the skill from vendors in-game. \nIt does not prevent the player from using the skill \nif they later don’t meet its requirements while still possessing the skill."
			},
    "skillTags": {
				"type":"multilist",
						"options":[],
				"tooltip":"what locations it hits. Display- can be used in skillTags to display a skill somewhere else. \nSkills with the holy tag will scale with the players virility \neg 50% virility will lower the damage by half.",
				"choices":["Sesitivity"]
			},
    "fetishTags": {
				"type":"multilist",
						"options":["addition"],
				"tooltip":"What fetishes (and addictions) the skill targets, \nscaling the damage accordingly, \nand assisting monster AI.",
				"choices":["Fetishes"]},
    "targetType": {
				"type":"singlelist",
				"tooltip":"what stat does it scale off of",
				"choices":["self","single","2Hits","3Hits","4Hits","5Hits","all","Escape"]
			},

"power": {
				"type":"int",
				"tooltip":"Base damage or healing value of the skill.",
				"default":"1"
			},
    "minRange": {
				"type":"int",
				"tooltip":"The randomized percent minimum damage or healing range of the skill.",
				"default":"1"
			},
    "maxRange": {
				"type":"int",
				"tooltip":"The randomized percent maximum damage or healing range of the skill.",
				"default":"1"
			},
    "recoil": {
				"type":"int",
				"tooltip":"Percentage of the damage dealt to the target \nrecoiled back at the caster. Cannot be a negative value.",
				"default":"1"
			},
    "critDamage": {
				"type":"int",
				"tooltip":"Percent damage modifier for the critical damage dealt. \nFlatly additive/subtractive to any existing modifiers."
			},
    "initiative": {
				"type":"int",
				"tooltip":"Flat initiative modifier for the skill’s turn order. \nFlatly additive/subtractive to any existing modifiers."
			},
    "accuracy": {
				"type":"int",
				"tooltip":"Flat accuracy modifier for whether the skill successfully lands. \nFlatly additive/subtractive to any existing modifiers."
			},
    "scalesWithStatusEffect": {
				"type":"singlelist",
				"tooltip":"Scales the damage or healing if the given status effect is on the target. \nStacks on potency, see Status Effect Reference for potency reference.",
				"choices":["files/itemStatusEffects.txt"]
			},
    "flatDamageSF-FlatScaling": {
				"type":"int",
				"tooltip":"Flat base damage boost for each stack of scalesWithStatusEffect"
			},
    "flatDamageSF-PercentScaling": {
				"type":"int",
				"tooltip":"Percent damage boost for each stack of scalesWithStatusEffect. \nTake caution with high percent values."
			},
    "TotalDamageSF-PercentScaling": {
				"type":"int",
				"tooltip":"Boost to total skill damage for each stack of scalesWithStatusEffect. This means it bypasses defense reductions, and applies after other damage boosts. Take extreme care. If using this key, set the other SF damage scaling key values to 0, or remove entirely"
			},
    "statusEffect": {
				"type":"singlelist",
				"choices":["files/itemStatusEffects.txt"],
				"tooltip":"What status effect it uses. Use EventRestrain for combat event based restrain application, ensuring combat event based restrain skills don’t chain.",
				"default":"Power"
			},
    "statusChance": {
				"type":"int",
				"tooltip":"Base percent chance of the effect successfully applying on the target.",
				"default":"1"
			},
    "statusDuration": {
				"type":"int",
				"tooltip":"How many turns the effect lasts.",
				"default":"1"
			},
    "statusPotency": {
				"type":"int",
				"tooltip":"Ranges from: Aphrodisiac flat arousal per turn (can stack), Restrain durability, Sleep flat energy drain per turn (can stack), how much of a given stat Buff/Debuff, or number of stacks for Paralysis or Trance.",
				"default":"0"
			},
    "statusResistedBy": {
				"type":"singlelist",
				"choices":["files/itemStatusEffects.txt"],
				"tooltip":"Which target stat resists the affect for avoiding application. Irrelevant to Buffs/Debuffs.",
				"default":"Luck"
				
			},
    "statusText": {
				"type":"text",
				"tooltip":"Will change status effect name in game.\n Making it unique for Buff/Debuff skills ensures they don’t overlap with others in tracking.",
				"default":""
			},
    "statusEffectScaling": {
				"type":"int",
				"tooltip":"For stat buff/debuff skills, deciding their scaling based on the set statType value of the caster’s stats. 100% of a given stat is equal to stat * 1, 50% stat * 0.5, etc. Can also be used for scaling healing skillType skills with the skill’s given statType."
			},
    "outcome": {
				"type":"text",
				"tooltip":"Triggers on the skill successfully landing.",
				"options":["function"]
			},
    "miss": {
				"type":"text",
				"tooltip":"Triggers on the skill missing.",
				"options":["function"]
			},
    "restraintStruggle": {
				"type":"text",
				"tooltip":"Triggers displayable text when the target struggles."
			},
    "restraintStruggleCharmed": {
				"type":"text",
				"tooltip":"Triggers displayable text when the charmed target struggles."
			},
    "retraintEscaped": {
				"type":"text",
				"tooltip":"Triggers displayable text when the target breaks the restraints."
			},
    "retraintEscapedFail": {
				"type":"text",
				"tooltip":"Triggers displayable text when the target fails to break the restraints."
			},
    "restraintOnLoss": {
				"type":"text",
				"tooltip":"Triggers displayable text if the target loses while restrained. Made for Pin, but could have other uses."
			},
    "statusOutcome": {
				"type":"text",
				"tooltip":"Triggers displayable text upon the skill hitting its target. Providing IgnoreAttack will allow for combat event based attack or any healing skillType skills to miss normally."
			},
    "statusMiss": {
				"type":"text",
				"tooltip":"Triggers displayable text upon the skill missing its target. Can take functions for combat events and related."
			},
	"optional":{
				"type":"optional",
				"choices":["skills","global"],
				"tooltip":"",
				"options":[]
					}
}
